{"version":3,"sources":["pages/Home.js","components/CustomAccordianItem.js","components/singleTripGrid.js","pages/Keystone.js","App.js","reportWebVitals.js","index.js"],"names":["Home","document","title","Row","className","Col","md","href","CustomAccordianItem","props","optionItems","options","map","option","index","xs","Form","Group","Check","type","label","checked","checkState","id","optionIndex","onChange","e","updateCheckState","Accordion","Item","eventKey","Header","header","Body","Container","fluid","SingleTripGrid","sum","useState","items","name","optionList","checkStateList","cost","state","setState","newItems","target","AccordianItems","item","TableBody","checkIndex","forEach","Table","striped","bordered","hover","App","path","Keystone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b82932f0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"./Home.css\";\r\nexport default function Home() {\r\n  document.title = \"POT MARC\"\r\n\r\n  return (\r\n    <Row className=\"justify-content-center\">\r\n      <Col md={6} className=\"park-city-bg\">\r\n        <a href=\"#ParkCity\">\r\n          <div className=\"w-100 h-100\">\r\n            <h1 className=\"text-decoration-none\">PARK CITY</h1>\r\n          </div>\r\n        </a>\r\n      </Col>\r\n      <Col md={6} className=\"keystone-bg\">\r\n        <a href=\"#Keystone\">\r\n          <h1> Keystone, CO</h1>\r\n        </a>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction CustomAccordianItem(props) {\r\n  const optionItems = props.options.map((option, index) => (\r\n    <Row key={index}>\r\n      <Col xs={6} md={6}>\r\n        <a href=\"https://google.com\">{option}</a>\r\n\r\n      </Col>\r\n\r\n      <Col xs={6} md={6}>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Select\"\r\n              checked={props.checkState[index]}\r\n              id={[props.optionIndex, index]}\r\n              onChange={(e) => {\r\n                props.updateCheckState(e);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  ));\r\n\r\n  return (\r\n    <Accordion.Item eventKey={props.eventKey}>\r\n      <Accordion.Header>{props.header}</Accordion.Header>\r\n      <Accordion.Body>\r\n        {optionItems}\r\n        <Container fluid></Container>\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n}\r\n\r\nexport default CustomAccordianItem;\r\n","import React, { useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport CustomAccordianItem from \"./CustomAccordianItem\";\r\n\r\nfunction SingleTripGrid() {\r\n  let sum = 0\r\n  const [state, setState] = useState({\r\n    items: [\r\n      {\r\n        name: \"Flights\",\r\n        optionList: [\"option 1\"],\r\n        checkStateList: [true],\r\n        cost: [200],\r\n      },\r\n      {\r\n        name: \"Transportation\",\r\n        optionList: [\"option 1\", \"option 2\"],\r\n        checkStateList: [false, false],\r\n        cost: [420, 421],\r\n      },\r\n      {\r\n        name: \"Accomodation\",\r\n        optionList: [\"option 1\", \"option 2\"],\r\n        checkStateList: [false, false],\r\n        cost: [420, 421],\r\n      },\r\n      {\r\n        name: \"Rental\",\r\n        optionList: [\"option 1\", \"option 2\"],\r\n        checkStateList: [false, false],\r\n        cost: [420, 421],\r\n      },\r\n      {\r\n        name: \"Passes\",\r\n        optionList: [\"option 1\", \"option 2\"],\r\n        checkStateList: [false, false],\r\n        cost: [420, 421],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const updateCheckState = (e) => {\r\n    const newItems = [...state.items];\r\n    newItems[e.target.id[0]].checkStateList = [false, false];\r\n    if (e.target.checked){\r\n      newItems[e.target.id[0]].checkStateList[e.target.id[2]] = true;\r\n    }\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      items: newItems,\r\n    }));\r\n  };\r\n\r\n  const AccordianItems = state.items.map((item, index) => (\r\n    <CustomAccordianItem\r\n      key={index}\r\n      header={item.name}\r\n      eventKey={index}\r\n      options={item.optionList}\r\n      checkState={item.checkStateList}\r\n      optionIndex={index}\r\n      updateCheckState={updateCheckState}\r\n    />\r\n  ));\r\n\r\n  const TableBody = state.items.map((item, index) => (\r\n    <tbody key={index}>\r\n      {item.checkStateList.map((checkState, checkIndex) => {\r\n        return checkState ? (\r\n          <tr key={index}>\r\n            <td>{item.name}</td>\r\n            <td>{item.optionList[checkIndex]}</td>\r\n            <td>{item.cost[checkIndex]}</td>\r\n          </tr>\r\n        ) : null;\r\n      })}\r\n    </tbody>\r\n  ));\r\n  \r\n  state.items.forEach((item) => {\r\n    item.checkStateList.forEach((checkState,index) => {\r\n      if(checkState){\r\n        sum += item.cost[index]\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Accordion>{AccordianItems}</Accordion>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Selection</th>\r\n            <th>Option Selected</th>\r\n            <th>Cost</th>\r\n          </tr>\r\n        </thead>\r\n        {TableBody}\r\n      </Table>\r\n      <h1 className=\"text-end\">TOTAL {sum}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleTripGrid;\r\n","import React from \"react\";\r\nimport SingleTripGrid from \"../components/singleTripGrid\"\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n    <h1 className=\"text-center p-3\">POT MARC TRIP PLANNER</h1>\r\n      <SingleTripGrid />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\"\r\nimport Keystone from \"./pages/Keystone\"\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/ParkCity/\">\r\n            <Keystone />\r\n          </Route>\r\n          <Route path=\"/keystone/\">\r\n            <Keystone />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}